{"version":3,"file":"static/js/6.a64e823d.chunk.js","mappings":"+MAGaA,EAAYC,EAAAA,EAAAA,GAAH,mSAiBTC,GAAYD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,wK,SCCtB,EAjBmB,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OAChBC,GAAWC,EAAAA,EAAAA,MAEb,OAAS,wBACRF,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACR,EAAD,WACE,SAACE,EAAD,CAAWO,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAACC,KAAMP,GAApD,SAAgEG,EAAMK,SADxDL,EAAME,GADP,KAMpB,C,uICZYI,EAASb,EAAAA,EAAAA,OAAH,sJAUNc,EAAcd,EAAAA,EAAAA,MAAH,mE,kBCqDxB,EA1De,WACb,OAA4Be,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KACA,GAA8BD,EAAAA,EAAAA,UAAS,IAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACJF,GACFG,EAAYH,EAEf,GAAE,CAACA,IAEJ,IAcMG,EAAc,SAAAH,IAClBI,EAAAA,EAAAA,IAAaJ,GACVK,MAAK,SAAAC,GACJ,OAA2B,IAAvBA,EAAIC,QAAQC,OACPC,QAAQC,OAAR,+BAAuCV,IAGzCM,EAAIC,OACZ,IACAF,MAAK,SAAAE,GAAO,OAAIb,EAAUa,EAAd,IACZI,OAAM,SAAAhB,GACLC,EAAWD,GACXD,EAAU,GACX,GACJ,EAED,OACE,iCACE,kBAAMkB,SAhCgB,SAAAC,GACxBA,EAAMC,iBACN,IAAMC,EAAQF,EAAMG,OAAOC,SAASC,OAAOH,MAAMI,cAG7CpB,EADU,KAAVgB,EACgB,CAAC,EAED,CAAEf,MAAOe,IAG7BZ,EAAYY,GACZF,EAAMG,OAAOI,OACd,EAoBG,WACE,SAAC5B,EAAD,CACE6B,KAAK,OACLC,KAAK,YAEP,UAAC/B,EAAD,YACI,SAAC,MAAD,IADJ,eAIDV,EAAO2B,OAAS,GAAI,SAACe,EAAA,EAAD,CAAY1C,OAAQA,KAAa,uBAAIc,MAG/D,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Movies.styled.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieItem = styled.li`\n  display: flex;\n  justify-content: center;\n  margin: 15px 0;\n  text-decoration: none;\n  font-family: cursive;\n  font-size: 22px;\n  font-weight: 400;\n  transition: transform 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    \n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #fff;\n\n\n  &:visited {\n    color: #848789;\n\n    &:hover,\n  &:focus {\n   color: #fff;\n    \n  }\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MovieItem, MovieLink } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\nconst location = useLocation();\n\n    return  (<ul>\n    {movies.map(movie => (\n      <MovieItem key={movie.id}>\n        <MovieLink to={`/movies/${movie.id}`} state={{from: location}}>{movie.title}</MovieLink>\n      </MovieItem>\n    ))}\n  </ul>)\n}\n;\n\nMoviesList.propTypes = {\n  movies: PropTypes.array,\n};\n\nexport default MoviesList;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  padding: 9px 15px;\n  border-radius: 5px;\n  font-size: 16px;\n  font-weight: 600;\n  margin-left: 20px;\n  cursor: pointer;`\n\n\n\nexport const SearchInput = styled.input`\n    padding: 10px;\n    border-radius: 5px;`\n    ","import { searchMovies } from 'services/movie-api.service';\nimport { useEffect, useState } from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useSearchParams } from 'react-router-dom';\nimport { Button, SearchInput } from './Movies.styled';\nimport { ImSearch } from 'react-icons/im';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [message, setMessage] = useState('');\n  const [searchParams, setsearchParams] = useSearchParams('');\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query) {\n      loadMoviews(query);\n    }\n  }, [query]);\n\n  const handleSearchMovie = event => {\n    event.preventDefault();\n    const value = event.target.elements.search.value.toLowerCase();\n\n    if (value === '') {\n        setsearchParams({});\n      } else {\n        setsearchParams({ query: value });\n      }\n\n    loadMoviews(value);\n    event.target.reset();\n  };\n\n  const loadMoviews = query => {\n    searchMovies(query)\n      .then(res => {\n        if (res.results.length === 0) {\n          return Promise.reject(`No movies found with ${query}`);\n        }\n\n        return res.results;\n      })\n      .then(results => setMovies(results))\n      .catch(message => {\n        setMessage(message);\n        setMovies([]);\n      });\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSearchMovie}>\n        <SearchInput\n          type=\"text\"\n          name=\"search\"\n        />\n        <Button>\n            <ImSearch/>\n            Search</Button>\n      </form>\n      {movies.length > 0 ? <MoviesList movies={movies} /> : <p>{message}</p>}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["MovieItem","styled","MovieLink","Link","movies","location","useLocation","map","movie","to","id","state","from","title","Button","SearchInput","useState","setMovies","message","setMessage","useSearchParams","searchParams","setsearchParams","query","get","useEffect","loadMoviews","searchMovies","then","res","results","length","Promise","reject","catch","onSubmit","event","preventDefault","value","target","elements","search","toLowerCase","reset","type","name","MoviesList"],"sourceRoot":""}